/*

Don't alter this file, it was generated.

*/
// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"time"

	v1alpha1 "code.cloudfoundry.org/cf-operator/pkg/kube/apis/boshdeployment/v1alpha1"
	scheme "code.cloudfoundry.org/cf-operator/pkg/kube/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// BOSHDeploymentsGetter has a method to return a BOSHDeploymentInterface.
// A group's client should implement this interface.
type BOSHDeploymentsGetter interface {
	BOSHDeployments(namespace string) BOSHDeploymentInterface
}

// BOSHDeploymentInterface has methods to work with BOSHDeployment resources.
type BOSHDeploymentInterface interface {
	Create(*v1alpha1.BOSHDeployment) (*v1alpha1.BOSHDeployment, error)
	Update(*v1alpha1.BOSHDeployment) (*v1alpha1.BOSHDeployment, error)
	UpdateStatus(*v1alpha1.BOSHDeployment) (*v1alpha1.BOSHDeployment, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string, options v1.GetOptions) (*v1alpha1.BOSHDeployment, error)
	List(opts v1.ListOptions) (*v1alpha1.BOSHDeploymentList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.BOSHDeployment, err error)
	BOSHDeploymentExpansion
}

// bOSHDeployments implements BOSHDeploymentInterface
type bOSHDeployments struct {
	client rest.Interface
	ns     string
}

// newBOSHDeployments returns a BOSHDeployments
func newBOSHDeployments(c *BoshdeploymentV1alpha1Client, namespace string) *bOSHDeployments {
	return &bOSHDeployments{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the bOSHDeployment, and returns the corresponding bOSHDeployment object, and an error if there is any.
func (c *bOSHDeployments) Get(name string, options v1.GetOptions) (result *v1alpha1.BOSHDeployment, err error) {
	result = &v1alpha1.BOSHDeployment{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("boshdeployments").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of BOSHDeployments that match those selectors.
func (c *bOSHDeployments) List(opts v1.ListOptions) (result *v1alpha1.BOSHDeploymentList, err error) {
	var timeout time.Duration
	if opts.TimeoutSeconds != nil {
		timeout = time.Duration(*opts.TimeoutSeconds) * time.Second
	}
	result = &v1alpha1.BOSHDeploymentList{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("boshdeployments").
		VersionedParams(&opts, scheme.ParameterCodec).
		Timeout(timeout).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested bOSHDeployments.
func (c *bOSHDeployments) Watch(opts v1.ListOptions) (watch.Interface, error) {
	var timeout time.Duration
	if opts.TimeoutSeconds != nil {
		timeout = time.Duration(*opts.TimeoutSeconds) * time.Second
	}
	opts.Watch = true
	return c.client.Get().
		Namespace(c.ns).
		Resource("boshdeployments").
		VersionedParams(&opts, scheme.ParameterCodec).
		Timeout(timeout).
		Watch()
}

// Create takes the representation of a bOSHDeployment and creates it.  Returns the server's representation of the bOSHDeployment, and an error, if there is any.
func (c *bOSHDeployments) Create(bOSHDeployment *v1alpha1.BOSHDeployment) (result *v1alpha1.BOSHDeployment, err error) {
	result = &v1alpha1.BOSHDeployment{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("boshdeployments").
		Body(bOSHDeployment).
		Do().
		Into(result)
	return
}

// Update takes the representation of a bOSHDeployment and updates it. Returns the server's representation of the bOSHDeployment, and an error, if there is any.
func (c *bOSHDeployments) Update(bOSHDeployment *v1alpha1.BOSHDeployment) (result *v1alpha1.BOSHDeployment, err error) {
	result = &v1alpha1.BOSHDeployment{}
	err = c.client.Put().
		Namespace(c.ns).
		Resource("boshdeployments").
		Name(bOSHDeployment.Name).
		Body(bOSHDeployment).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *bOSHDeployments) UpdateStatus(bOSHDeployment *v1alpha1.BOSHDeployment) (result *v1alpha1.BOSHDeployment, err error) {
	result = &v1alpha1.BOSHDeployment{}
	err = c.client.Put().
		Namespace(c.ns).
		Resource("boshdeployments").
		Name(bOSHDeployment.Name).
		SubResource("status").
		Body(bOSHDeployment).
		Do().
		Into(result)
	return
}

// Delete takes name of the bOSHDeployment and deletes it. Returns an error if one occurs.
func (c *bOSHDeployments) Delete(name string, options *v1.DeleteOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("boshdeployments").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *bOSHDeployments) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	var timeout time.Duration
	if listOptions.TimeoutSeconds != nil {
		timeout = time.Duration(*listOptions.TimeoutSeconds) * time.Second
	}
	return c.client.Delete().
		Namespace(c.ns).
		Resource("boshdeployments").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Timeout(timeout).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched bOSHDeployment.
func (c *bOSHDeployments) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.BOSHDeployment, err error) {
	result = &v1alpha1.BOSHDeployment{}
	err = c.client.Patch(pt).
		Namespace(c.ns).
		Resource("boshdeployments").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
